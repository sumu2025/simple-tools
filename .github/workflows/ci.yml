name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-ansi

    - name: Run tests with coverage
      run: |
        poetry run pytest -v

    - name: Generate coverage report
      run: |
        poetry run pytest --cov=src/simple_tools --cov-report=xml --cov-report=term-missing

    - name: Check coverage threshold
      run: |
        poetry run pytest --cov=src/simple_tools --cov-fail-under=70

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/
      if: always()

  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest

    - name: Build package
      run: |
        poetry build

    - name: Upload distribution
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Test installation
      run: |
        pip install dist/*.whl
        tools --help
