[tool.poetry]
name = "simple-tools"
version = "0.1.0"
description = "一个简单实用的Python工具集，专注解决日常工作中的实际问题"
authors = ["peacock"]
readme = "README.md"
packages = [{include = "simple_tools", from = "src"}]

[tool.poetry.dependencies]
python = "^3.13.3"
click = "^8.1"
pydantic = "^2.11.5"
logfire = "^3.16.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-cov = "^5.0"
pre-commit = "^3.5.0"

[tool.poetry.scripts]
tools = "simple_tools.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=src/simple_tools",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=70"
]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
filterwarnings = [
    "error::DeprecationWarning",
    "error::PendingDeprecationWarning",
    "ignore::DeprecationWarning:logfire.*"
]

[tool.coverage.run]
source = ["src/simple_tools"]
branch = true
omit = [
    "*/tests/*",
    "*/sandbox/*",
    "*/__pycache__/*",
    "src/simple_tools/cli.py"
]

[tool.coverage.report]
fail_under = 70
precision = 1
show_missing = true
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == '__main__':",       # CLI 启动脚本入口
    "if TYPE_CHECKING:",                # 静态类型检查代码块
    "class .*Protocol.*:",              # 类型协议定义（PEP 544）
    "@(abc\\.)?abstractmethod"          # 抽象接口方法
]

[tool.coverage.html]
directory = "htmlcov"
